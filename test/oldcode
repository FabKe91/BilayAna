        elif calculation_scheme=='COM_Based':
            ### Calculates Center of mass of tail atoms and rescales ALL order angles by ang(COMxyz-Pxyz,[0,0,1])
            tailcoords=[]
            for i in range(len(self.scd_tail_atoms_of[lipidmolecule])):
                tailcoords+=([getcoords[''.join([lipidmolecule,time,str(res),x])] for x in self.scd_tail_atoms_of[lipidmolecule][i]])
            headcoords=np.array(getcoords[''.join([lipidmolecule,time,str(res),self.central_atom_of[lipidmolecule]])])
            geocenter=self.calculate_geometriccenter(tailcoords)
            tiltangle=np.arccos(np.dot((geocenter-headcoords),[0,0,1])/np.linalg.norm(geocenter-headcoords))
            if tiltangle>np.pi/2:
                tiltangle=abs(tiltangle-np.pi)
            for tail in self.scd_tail_atoms_of[lipidmolecule]:
                scd_of_tail=0
                for atomindex in range(len(tail)-1): ### -1 because last res is not taken (taking index len() implies "range+1") 
                    atm1=tail[atomindex]    ### Attention: In the tail list only Scd-specific (every 2nd) atom is included!! Thus: atomindex-atomindex+1
                    atm2=tail[atomindex+1]
                    resid=str(res)
                    coordinates_of_atom1=np.array(getcoords[''.join([lipidmolecule,time,resid,atm1])])
                    coordinates_of_atom2=np.array(getcoords[''.join([lipidmolecule,time,resid,atm2])])
                    diffvector=coordinates_of_atom1-coordinates_of_atom2
                    normdiffvector=np.linalg.norm(diffvector)
                    cos=np.dot(diffvector,[0,0,1])/normdiffvector
                    chain_angle=np.arccos((cos**2)**0.5)
                    #if lipidmolecule=='CHL1':
                    #    print(res, chain_angle*180/np.pi,tiltangle*180/np.pi, chain_angle*180/np.pi-tiltangle*180/np.pi)
                    cos=np.cos(chain_angle-tiltangle)
                    #cos=np.cos(chain_angle-tiltangle)
                    scd_of_atoms = 0.5 * (3 * cos**2 - 1)
                    scd_of_tail += scd_of_atoms
                scd_of_tail=scd_of_tail/(len(tail)-1)
                totalscd=totalscd+scd_of_tail
            totalscd=totalscd/len(self.scd_tail_atoms_of[lipidmolecule])
            return (totalscd, tiltangle*180/np.pi)
